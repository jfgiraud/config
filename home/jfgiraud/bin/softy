#!/usr/bin/python3 -u
# -*- coding: utf-8 -*-

import argparse
import re
import sys
from signal import signal, SIGPIPE, SIG_DFL
signal(SIGPIPE,SIG_DFL) 


parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,
                                 add_help=True,
                                 description='Parent Directory Indexor: scan an homedir and create a file containing urls')

parser.add_argument('-p', '--price', metavar='PRICE', type=float, help='Price of the object')
parser.add_argument('-n', '--number', metavar='NUMBER', type=int, help='Number of intervals')
parser.add_argument('-d', '--divisor', metavar='NUMBER', type=int, help='Interval divisor')

if len(sys.argv)==1: 
    parser.print_help()
    sys.exit(1)

namespace = parser.parse_args()

price = namespace.price
number = namespace.number
divisor = namespace.divisor

parts = number*(number+1)//2

for i in range(number, 0, -1):
    j = number-i+1
    p = price * i / parts
    if divisor is None:
        print('%2d %7.2f' % (j, p))
    else:
        print('%2d %7.2f %7.2f' % (j, p, p/divisor))


#p  = f(n+1)/2












