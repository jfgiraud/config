#!/bin/bash

usage() {
	cat <<-EOF
NAME:

        ${0##*/} - 

SYNOPSYS:

        ${0##*/}
             -h, --help           display help
                                  
        
With no FILE, or when FILE is -, read standard input.

AUTHOR
	Written by Jean-François Giraud.

COPYRIGHT
	Copyright © 2014 Jean-François Giraud.  License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
	This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

EOF
	exit 0
}

error() {
    STATUS="$1"
    MSG="$2"
    cat >&2 <<-EOF
${0##*/}: $MSG
Try \`${0##*/} -h\` for more information.
EOF
    exit 1
}

PARAMS=$(getopt -o "f:n:wcl:h" -l "function:,number:,words,chars,language:help" -- "$@")

eval set -- "$PARAMS"

language="FR"
function="lorem"
flag_words=true
flag_chars=false
number=207
while [ "X$1" != "X--" ]; do
    case "$1" in
	-f|--function)
	    shift
	    function="$1"
	    ;;
	-l|--language)
	    shift
	    language="${1^^}"
	    ;;
	-n|--number)
	    shift
	    number="${1}"
	    ;;
	-w|--words)
	    flag_words=true
	    flag_chars=false
	    ;;
	-c|--chars)
	    flag_words=false
	    flag_chars=true
	    ;;
	-h|--help)
	    usage
	    ;;
    esac
    shift
done

shift

declare -A functions=( ["lorem"]="ANY-lorem" ["cicero"]="ANY-cicero" ["li-europan"]="ANY-li-europan" ["werther"]="${language}-werther" ["kafka"]="${language}-kafka" ["pangram"]="${language}-pangram" ["a-z-1"]="EN-a-z-1")

function rawurlencode() {
    # http://stackoverflow.com/questions/296536/urlencode-from-a-bash-script
    local string="${1}"
    local strlen=${#string}
    local encoded=""
    for (( pos=0 ; pos<strlen ; pos++ )); do
	c=${string:$pos:1}
	case "$c" in
            [-_.~a-zA-Z0-9] ) o="${c}" ;;
            * )               printf -v o '%%%02x' "'$c"
	esac
	encoded+="${o}"
    done
    echo "${encoded}"    # You can either set a return variable (FASTER) 
    REPLY="${encoded}"   #+or echo the result (EASIER)... or both... :p
}

lang_function=${functions["$function"]}

curl -s "http://www.blindtextgenerator.com/text.php?textname=${lang_function}" > lorem.txt

function head_c() {
    head -c $number lorem.txt
    echo
}

function head_w() {
    local count=1
    while IFS='\n' read line || [[ $line ]]; do
        local p=""
        for word in $line; do
            count=$(($count+1))
            if [ $count -le $number ]; then
                echo -n "$p$word"
                p=" "
            else
                break 2
            fi
        done   
        echo 
    done < lorem.txt
    echo 
}

if [ "$flag_chars" == "true" ]; then
    head_c
elif [ "$flag_words" == "true" ]; then
    head_w
fi

rm -f lorem.txt
